spring:
  docker:
    compose:
      enabled: false
  security:
    oauth2:
      authorizationserver:
        client:
          oidc-client:
            registration:
              client-id: "oidc-client"
              client-secret: "{noop}secret"
              client-authentication-methods:
                - "client_secret_basic"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "http://127.0.0.1:8080/login/oauth2/code/oidc-client"
              post-logout-redirect-uris:
                - "http://127.0.0.1:8080/"
              scopes:
                - "openid"
                - "profile"
            require-authorization-consent: true
            token:
              access-token-time-to-live: 30s
          client-1:
            registration:
              client-id: "client"
              client-secret: "{bcrypt}$2a$10$jdJGhzsiIqYFpjJiYWMl/eKDOd8vdyQis2aynmFN0dgJ53XvpzzwC"
              client-authentication-methods: "client_secret_basic"
              authorization-grant-types:
                - "client_credentials"
                - "authorization_code"
                - "refresh_token"
              redirect-uris: "http://127.0.0.1:8080/login/oauth2/code/spring"
              post-logout-redirect-uris:
                - "http://127.0.0.1:8080/"
              scopes:
                - "user.read"
                - "user.write"
                - "openid"

